{"version":3,"file":"static/js/33.b433d967.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.jsx","components/Title/Title.styled.js","components/Title/Title.jsx","pages/Home.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const StyledMovList = styled.div`\n  display: flex;\n  justify-content: start;\n  align-items: center;\n  line-height: 0.8;\n`;\nexport const StyledUl = styled.ul``;\nexport const StyledLink = styled(Link)`\n  font-size: 18px;\n  font-weight: 600;\n  color: grey;\n\n  :hover {\n    color: tomato;\n  }\n`;\n","import { StyledMovList, StyledLink, StyledUl } from './MoviesList.styled';\nimport { useLocation } from 'react-router-dom';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <StyledMovList>\n      <ul>\n        {movies.map(({ id, title, poster_path }) => (\n          <StyledUl key={id}>\n            <StyledLink to={`/movies/${id}`} state={{ from: location }}>\n              {/* <img\n                  src={`https://image.tmdb.org/t/p/w500/${poster_path}`}\n                  alt={`Poster of ${title}`}\n                /> */}\n              <p>{title}</p>\n            </StyledLink>\n          </StyledUl>\n        ))}\n      </ul>\n    </StyledMovList>\n  );\n};\nexport default MoviesList;\n","import styled from 'styled-components';\nexport const StyledTitle = styled.h1`\n  color: black;\n`;\n","import { StyledTitle } from './Title.styled';\nconst Title = ({ title }) => {\n  return <StyledTitle>{title}</StyledTitle>;\n};\nexport default Title;\n","import { getTrending } from '../services/api';\nimport Loader from 'components/Loader/Loader';\nimport Title from 'components/Title/Title';\nimport MoviesList from 'components/MoviesList/MoviesList';\n\nconst { useEffect, useState } = require('react');\n\nconst Home = () => {\n  const [isloading, setIsLoading] = useState(false);\n  const [trendingMovies, setTrendingMovies] = useState([]);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fatchTranding = async () => {\n      setIsLoading(true);\n      try {\n        const response = await getTrending();\n        setTrendingMovies(prevState => [...prevState, ...response.results]);\n      } catch (error) {\n        setError(error.massage);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fatchTranding();\n  }, []);\n  return (\n    <div>\n      {error !== null && <p> Ooops...Error massage: {error}</p>}\n      {isloading && <Loader />}\n      <Title title=\"Trending today\" />\n      <MoviesList movies={trendingMovies} />\n    </div>\n  );\n};\nexport default Home;\n","import axios from 'axios';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '6e2a4b2de27857a6314a97684d8e3ec6';\n\nexport const getTrending = async () => {\n  const response = await axios.get(\n    `${BASE_URL}trending/all/day?api_key=${API_KEY}&language=en-US`\n  );\n  return await response.data;\n};\n\nexport const getSearchMovies = async query => {\n  const response = await axios.get(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${query}`\n  );\n  return response.data.results;\n};\nexport const getDetailsMovie = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\nexport const getCastMovie = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getReviewsMovie = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.results;\n};\n"],"names":["StyledMovList","styled","_templateObject","_taggedTemplateLiteral","StyledUl","_templateObject2","StyledLink","Link","_templateObject3","_ref","movies","location","useLocation","_jsx","children","map","_ref2","id","title","poster_path","to","concat","state","from","StyledTitle","_require","require","useEffect","useState","_useState","_useState2","_slicedToArray","isloading","setIsLoading","_useState3","_useState4","trendingMovies","setTrendingMovies","_useState5","_useState6","error","setError","fatchTranding","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","getTrending","sent","prevState","_toConsumableArray","results","t0","massage","finish","stop","apply","arguments","_jsxs","Loader","Title","MoviesList","BASE_URL","API_KEY","axios","data","abrupt","getSearchMovies","_callee2","query","_context2","_x","getDetailsMovie","_ref3","_callee3","movieId","_context3","_x2","getCastMovie","_ref4","_callee4","_context4","_x3","getReviewsMovie","_ref5","_callee5","_context5","_x4"],"sourceRoot":""}