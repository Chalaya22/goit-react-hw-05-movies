{"version":3,"file":"static/js/387.76e83bfa.chunk.js","mappings":"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","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.jsx","components/NotFound/NotFound.styled.js","components/NotFound/NotFound.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const StyledCastsList = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n  grid-gap: 16px;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;\nexport const StyledCastsItem = styled.li`\n  /* width: calc((100% - 60px) / 4); */\n  min-height: 280px;\n  list-style-type: none;\n`;\nexport const StyledCastsImg = styled.img`\n  max-width: 220px;\n  height: 305px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.3),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n`;\n","import { useParams } from 'react-router-dom';\nimport { useState } from 'react';\nimport {\n  StyledCastsList,\n  StyledCastsItem,\n  StyledCastsImg,\n} from './Cast.styled';\nimport Loader from 'components/Loader/Loader';\nimport NotFound from 'components/NotFound/NotFound';\nimport { getCastMovie } from '../../services/api';\nconst { useEffect } = require('react');\n\nconst Cast = () => {\n  const [actors, setActors] = useState(null);\n  const [isloading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const { movieId } = useParams();\n  const defaultImg =\n    'https://media.istockphoto.com/id/1322220448/ru/%D1%84%D0%BE%D1%82%D0%BE/%D0%B0%D0%B1%D1%81%D1%82%D1%80%D0%B0%D0%BA%D1%82%D0%BD%D1%8B%D0%B9-%D1%86%D0%B8%D1%84%D1%80%D0%BE%D0%B2%D0%BE%D0%B9-%D1%84%D1%83%D1%82%D1%83%D1%80%D0%B8%D1%81%D1%82%D0%B8%D1%87%D0%B5%D1%81%D0%BA%D0%B8%D0%B9-%D0%B3%D0%BB%D0%B0%D0%B7.jpg?s=612x612&w=0&k=20&c=QIyjOS5NLKacsYooP28QtmfgmM-RWP1o9wqIMfPS9og=';\n\n  useEffect(() => {\n    if (!movieId) return;\n    const getCast = async () => {\n      setIsLoading(true);\n      try {\n        const response = await getCastMovie(movieId);\n        setActors(response);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    getCast();\n  }, [movieId]);\n  return (\n    <>\n      {error && <div>Try to reload the page</div>}\n      {isloading && <Loader />}\n\n      <StyledCastsList>\n        {actors &&\n          actors.cast.map(({ id, profile_path, name, character }) => {\n            return (\n              <StyledCastsItem key={id}>\n                <StyledCastsImg\n                  src={\n                    profile_path\n                      ? `https://image.tmdb.org/t/p/w500/${profile_path}`\n                      : defaultImg\n                  }\n                  alt={`${name}`}\n                />\n                <h4>{name}</h4>\n                <p>Character: {character}</p>\n              </StyledCastsItem>\n            );\n          })}\n      </StyledCastsList>\n      {(!actors || actors.cast.length <= 0) && <NotFound />}\n    </>\n  );\n};\nexport default Cast;\n","import styled from 'styled-components';\n\nexport const StyledNotFound = styled.p`\n  color: #3f51b5;\n  padding: 5px 15px;\n  border: none;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.8),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.5), 0px 2px 1px -1px rgba(0, 0, 0, 0.8);\n  border-radius: 2px;\n  font-weight: 500;\n`;\n","import { StyledNotFound } from './NotFound.styled';\nconst NotFound = () => {\n  return (\n    <StyledNotFound>\n      {' '}\n      Sorry, nothing found for your request ðŸ’€ðŸ‘€ðŸ‘»\n    </StyledNotFound>\n  );\n};\nexport default NotFound;\n","import axios from 'axios';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '6e2a4b2de27857a6314a97684d8e3ec6';\n\nexport const getTrending = async () => {\n  const response = await axios.get(\n    `${BASE_URL}trending/all/day?api_key=${API_KEY}&language=en-US`\n  );\n  return await response.data;\n};\n\nexport const getSearchMovies = async query => {\n  const response = await axios.get(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${query}`\n  );\n  return response.data.results;\n};\nexport const getDetailsMovie = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\nexport const getCastMovie = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getReviewsMovie = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.results;\n};\n"],"names":["StyledCastsList","styled","_templateObject","_taggedTemplateLiteral","StyledCastsItem","_templateObject2","StyledCastsImg","_templateObject3","useEffect","require","_useState","useState","_useState2","_slicedToArray","actors","setActors","_useState3","_useState4","isloading","setIsLoading","_useState5","_useState6","error","setError","movieId","useParams","getCast","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","getCastMovie","sent","t0","message","finish","stop","apply","arguments","_jsxs","_Fragment","children","_jsx","Loader","cast","map","_ref2","id","profile_path","name","character","src","concat","alt","length","NotFound","StyledNotFound","BASE_URL","API_KEY","getTrending","axios","data","abrupt","getSearchMovies","_callee2","query","_context2","results","_x","getDetailsMovie","_ref3","_callee3","_context3","_x2","_ref4","_callee4","_context4","_x3","getReviewsMovie","_ref5","_callee5","_context5","_x4"],"sourceRoot":""}