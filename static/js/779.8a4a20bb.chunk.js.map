{"version":3,"file":"static/js/779.8a4a20bb.chunk.js","mappings":"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","sources":["components/Reviews/Reviews.styled.js","components/Reviews/Reviews.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\nexport const StyledReviews = styled.ul`\n  list-style-type: none;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { StyledReviews } from './Reviews.styled';\nimport { getReviewsMovie } from '../../services/api';\n// import NotFound from 'components/NotFound/NotFound';\nimport Loader from 'components/Loader/Loader';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const [isloading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    if (!movieId) return;\n    const getReviews = async () => {\n      setIsLoading(true);\n      try {\n        const response = await getReviewsMovie(movieId);\n        setReviews(response);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    getReviews();\n  }, [movieId]);\n  return (\n    <>\n      {error && <div>Try to reload the page</div>}\n      {isloading && <Loader />}\n\n      {reviews.length > 0 ? (\n        reviews.map(({ id, author, content }) => {\n          return (\n            <StyledReviews key={id}>\n              <li>\n                <b> Author: {author}</b>\n              </li>\n              <li>{content}</li>\n            </StyledReviews>\n          );\n        })\n      ) : (\n        <p>Sorry, we don`t have any review for this movie ü§∑üèº‚Äç‚ôÇÔ∏è</p>\n      )}\n    </>\n  );\n};\nexport default Reviews;\n","import axios from 'axios';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '6e2a4b2de27857a6314a97684d8e3ec6';\n\nexport const getTrending = async () => {\n  const response = await axios.get(\n    `${BASE_URL}trending/all/day?api_key=${API_KEY}&language=en-US`\n  );\n  return await response.data;\n};\n\nexport const getSearchMovies = async query => {\n  const response = await axios.get(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${query}`\n  );\n  return response.data.results;\n};\nexport const getDetailsMovie = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\nexport const getCastMovie = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getReviewsMovie = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.results;\n};\n"],"names":["StyledReviews","styled","_templateObject","_taggedTemplateLiteral","_useState","useState","_useState2","_slicedToArray","reviews","setReviews","_useState3","_useState4","isloading","setIsLoading","_useState5","_useState6","error","setError","movieId","useParams","useEffect","getReviews","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","getReviewsMovie","sent","t0","message","finish","stop","apply","arguments","_jsxs","_Fragment","children","_jsx","Loader","length","map","_ref2","id","author","content","BASE_URL","API_KEY","getTrending","axios","concat","data","abrupt","getSearchMovies","_callee2","query","_context2","results","_x","getDetailsMovie","_ref3","_callee3","_context3","_x2","getCastMovie","_ref4","_callee4","_context4","_x3","_ref5","_callee5","_context5","_x4"],"sourceRoot":""}